Ajker topic :=> 
1. Dynamic Types
2. Type Conversion
3. NaN and -0
4. Closure
5. IIFE
6. Curring




1. Dynamic Types :
amader world e 2 type er language ase . ekta hocche Dynamic Types language and arekta hocche Static Types language

#Dynamic Types language : jei programming language e variable declare er somoy type declare korte hoy na setake bole Dynamic Types language . javascript ekta Dynamic types language . javascript compiler nijer value ta porjobekkhon kore decide kore ney sei variable er type ki hobe . jemon :
let randomVariable = 2
randomVariable = "h"
randomVariable = true
randomVariable = []
jodio typescript aisha javascript er ai gap ta puron kore 

#Static Types language : jei language e types declare kora hoy jemon C, C++ , Java etc...

##Important Notes : 
keno null er type object ? 
amra jokhon typeof null dei tokhon output object ashe . karon ?
karon holo javascript kora hoise C and C++ diye . C and C++ er moddhe null er type object hoye thake . tai sei same jinishtaii javascript e replicate hoise . eta ekta legecy bug 



2. Type Conversion : 

JavaScript-এ টাইপ কনভার্শন একটি গুরুত্বপূর্ণ বিষয়। টাইপ কনভার্শন মানে হল একটি ডেটা টাইপকে অন্য ডেটা টাইপে রূপান্তর করা। JavaScript-এ এটি দুইভাবে ঘটে:

Implicit Type Conversion (Type Coercion): যখন JavaScript স্বয়ংক্রিয়ভাবে টাইপ কনভার্শন করে।
Explicit Type Conversion: যখন ডেভেলপার সরাসরি টাইপ কনভার্শনের নির্দেশ দেন।

# Implicit Type Conversion (Type Coercion)
JavaScript কিছু অপারেশনের সময় ডেটার টাইপ স্বয়ংক্রিয়ভাবে পরিবর্তন করে।

উদাহরণ ১: String থেকে Number
console.log("5" - 2); // Output: 3
কেন?
"5" একটি স্ট্রিং, কিন্তু - অপারেটর ব্যবহার করার সময় JavaScript এটিকে Number-এ রূপান্তর করে।

উদাহরণ ২: Number থেকে String
console.log("Hello" + 5); // Output: "Hello5"
কেন?
+ অপারেটর ব্যবহার করলে JavaScript সংখ্যাকে স্ট্রিং-এ রূপান্তর করে।

##Important Notes : 
+ operator diye mainly 2 ta number add kora jay and 2 ta string concatination kora jay . jokhon string + number kora hoy tokhon type Conversion er khetre string beshi priority jay . tai sudhu sei khetre string hoye jay . jemon "2" + 3 = "23" kintu "2" - 1 = 1 hobe . 

উদাহরণ ৩: Boolean থেকে Number
console.log(true + 1); // Output: 2
console.log(false + 1); // Output: 1
কেন?
true-কে 1 এবং false-কে 0 হিসেবে গণ্য করা হয়।


# Explicit Type Conversion
এটি তখন ঘটে যখন ডেভেলপার নিজে টাইপ পরিবর্তন করতে চান।

উদাহরণ ১: String থেকে Number
let str = "123";
let num = Number(str);
console.log(num); // Output: 123
console.log(typeof num); // Output: number

উদাহরণ ২: Number থেকে String
let num = 123;
let str = String(num);
console.log(str); // Output: "123"
console.log(typeof str); // Output: string

উদাহরণ ৩: Boolean থেকে Number
let isTrue = true;
let num = Number(isTrue);
console.log(num); // Output: 1

উদাহরণ ৪: Number থেকে Boolean
let num = 0;
let bool = Boolean(num);
console.log(bool); // Output: false

## Type Conversion Table dekha jabe ./images/typeConversionTable.png file er moddhe


কিছু গুরুত্বপূর্ণ পয়েন্ট
Falsy Values: JavaScript-এ 0, null, undefined, false, "" (খালি স্ট্রিং), এবং NaN হলো "Falsy"।

console.log(Boolean(0)); // Output: false
console.log(Boolean("")); // Output: false
Truthy Values: Falsy বাদে সবকিছু "Truthy"।

console.log(Boolean(1)); // Output: true
console.log(Boolean("Hello")); // Output: true
NaN (Not-a-Number): যখন সংখ্যা হিসেবে কনভার্ট করা যায় না।

let result = Number("abc");
console.log(result); // Output: NaN
এই বিষয়গুলো বোঝার মাধ্যমে JavaScript-এ টাইপ কনভার্শন আরও স্পষ্ট হবে।
