QUESTION : Web Apis ki ? 

Answer : amader code sob callstack e jay . callstack holo one kind of javascript run time . tar mane javascript run time e callstack e perform hoy . javascript run time er somoy callstack e jodi setTimeout, promises, fetch, localstorage, session storage, Animations, document etc async code thake tokhon javascript run time seta Browser ke diya dey solve korar jonno . karon callstack seta solve korte pare na . egula Browser er part . kintu Browser ke kivabe dibe ? via Web Apis . Web Api er maddhome async code gula Browser e jay . Browser er kaj sesh hole segula abar callstack e ferot pathate hoy , karon sob kichu din sesh e callstack thekei execute hoy . sei somoy Browser Web Api ke call kore and Web Api er maddhome callstack e segula ferot pathano hoy . 

ekhane Web Api er Api ta ki ? 
Api holo 2 ta system er moddhe conncetion er maddhom ba Media . ekhane callstack er sathe Browser er connection e help korchi Web Api . tai take Api bola hoy 

Some Popular Web Apis
1. Console.log()
2. document
3. localstorage
4. session storage
5. cookies
6. promises
7. setTimeout
8. geolocation

Arekta Important Question : 
Question : jokhon Browser er kaj sesh hobe then sekhane thaka callback ki Browser or Web Apis execute korte parbe ?
Answer : NO . Web api or Browser setTimeout, promises, geolocation etc e thaka callback call or execute kore na . callback tai muloto callstack e dibe jeta callstack execute kore stack theke ber kore dibe 

But arekta Important Question royeche . 
Question : callstack directly Web Apis ke async code gula dey seta sotto and Web Apis directly seta Browser ke dey etao sotto but Browser jokhon kaj sesh kore Web Apis er kache code gula ferot dey or callback gula dey tokhon ki Web Apis directly callstack e diye dey ? 
Answer : No . callstack hoyto tokhon busy thake onno task complete korar jonno . tai code ferot deyar khetre kokhonoii Web Apis callstack er sathe directly communication kore na . tokhon Web Apis Task Queue te diye dey . Task Queue tokhon Event loop er maddhome check kore je callstack khali kina or callstack free ase kina . jodi free thake tokhon event loop priority basis e callstack e push kore data . 


Again a Question for see Browser Power 
Question : jodi callstack single thread houyar karone heavy task gula Browser ke diye dey tahole Browser kivabe segula handle kore ? 
Answer : Yes Browser khubii powerfull . karon Browser C++ diye lekha . C++ multi threaded language . tai Browser ekii sathe onk gula task korte pare but javascript run time single task complete kore at a time . 

some Browser Features : 
1. Rendering 
2. Camera
3. Mic
4. Network Services
5. GPU
6. Sensors
and so on..

jar karone amra application e camera , mic or some Network features easily access korte pari with others work on application . karon egula Browser parrally manage kore , not singly. 


setTimeout niye ekta big mistake or Myth akhn bolbo : 
amra jani setTimeout er moddhe ekta time pass kora hoy and amra sobai mone kori ai time er pore execute hobeii hobe . kintu eta wrong . time ta aijonnoi set kora hocche ai time complete hoile Browser sei callback ta Web Apis e diye dibe and Web Apis sei callback code ta Task queue te diye rakhbe and wait korbe kokhon event loop take callstack e niye jabe . orthat time ta only Browser er jonno je ai time er por Browser code ta Web apis e diye dibe . 


Rendering Pipelines :
function demo(){
    const box = document.getElementByClassName("box-r")

    box.style.backgroundColor = "blue"
    box.style.backgroundColor = "red"
    box.style.backgroundColor = "green"
    box.style.backgroundColor = "yellow"
    box.style.backgroundColor = "lime"
    box.style.backgroundColor = "purple"
    box.style.backgroundColor = "orange"
    box.style.backgroundColor = "maroon"

}
ekhane ami dom manupulation korechi .
The Question is : 
Question : jokhon ami dom manipulation kori tahole ki setao one by one hoye thake ? 
Answer : No. eta kono javascript code na . eta web api . orthat ai code gula javascript bujhe na . jokhon airokom dom related code ashe javascript tokhon code gula ke web api te diye dey and web api Browser ke diye dey . 

akhn kotha hocche ekhane box.style.backgroundColor onkbar kora hoise . tahole ki Browser sob gulaii ekta ekta kore korbe ? 
Answer is NO. jokhon Browser dekhbe same kaj barbar chacchi tokhon Browser vabbe je mone hoy ami last attempt "maroon" setaii korte chacchi and setaii kore dibe and baki uporer gula delete kore dibe . tai jodi demo call kora hoy tokhon kokhonoii sob gula color ashe na . last color taii ashe . karon Browser uporer gula delete kore last er taii apply kore . 

Important Notes : javascript code always runs to completion before any Rendering can happen . tar bangla ortho holo : JavaScript এর যেকোনো কোড একবার শুরু হলে, সেটা পুরোপুরি শেষ না হওয়া পর্যন্ত ব্রাউজার কিছু রেন্ডার করবে না।

ধরুন আপনি লিখলেন:
document.querySelector("div").style.backgroundColor = "blue";
while (true) {}

এখানে প্রথম লাইনে div এর ব্যাকগ্রাউন্ড কালার পরিবর্তনের জন্য বলা হয়েছে।
কিন্তু দ্বিতীয় লাইনে একটা infinite loop দিয়ে JavaScript আটকে গেছে।

এখন আপনি ভাবছেন — “ব্যাকগ্রাউন্ড তো বদলে যাওয়ার কথা!”
কিন্তু তা হবে না, কারণ JavaScript প্রথমে পুরো কোডটা "run to completion" করবে — অর্থাৎ পুরো কাজ শেষ না হওয়া পর্যন্ত render (দেখানো) করবে না।


Topic : RAF - requestAnimationFrame 
function demo(){
    const box = document.getElementByClassName("box-r")

    box.style.backgroundColor = "blue"
    box.style.backgroundColor = "red"
    box.style.backgroundColor = "green"
    box.style.backgroundColor = "yellow"
    box.style.backgroundColor = "lime"
    box.style.backgroundColor = "purple"
    box.style.backgroundColor = "orange"
    box.style.backgroundColor = "maroon"

    requestAnimationFrame(()=>{
        box.style.backgroundColor='aqua'
    })

}
akhn ki hobe ? akhn color aqua dekhabe . not maroon 
karon requestAnimationFrame has higher priority than other dom operations

tar mane same kaj er belay jodi oi kaj requestAnimationFrame er callback e thake seta Browser dhore and baki gula skip kore setaii apply kore . 

Important Notes : 
first e requestAnimationFrame er callback run kore before any css or any layout thing can happen
eta ekta order e chole - RAF -> CSS Calculation -> Layout Calculation -> Paint

example : upore Browser ke instruction dey je box ke maroon color korte hobe . tar ageii Browser ke requestAnimationFrame bole dey je box ke aqua korte hobe . jehetu eta higher priority tai Browser bolbe je jehetu same task er jonno requestAnimationFrame theke instruction ashce tai etaii apply hobe . 


one Important things : 
Browser can wait for Rendering, and when it's right time to do the rendering, they do the rendering. 
JavaScript will always run to completion before rendering can happen

